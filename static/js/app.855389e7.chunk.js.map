{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","screens/DetailScreen.js","screens/TodoScreen.js","screens/AddTaskScreen.js","components/TabBarLabel.js","navigation/BottomTabNavigator.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","DetailScreen","undefined","route","params","Button","title","onPress","navigation","goBack","Text","task","text","details","Stack","createStackNavigator","TodoScreen","Navigator","screenOptions","headerShown","Screen","component","TodoListScreen","focusListener","state","todoList","addListener","componentGainsFocus","fetch","headers","API","then","res","json","body","console","log","setState","todo","this","currentList","removeListener","updateTaskList","position","method","Accept","JSON","stringify","removed","filter","v","i","status","updated","completed","View","styles","container","contentContainerStyle","contentContainer","map","item","index","key","todoView","checked","completeTask","TouchableOpacity","push","right","removeTask","navigate","React","navigationOptions","header","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","maxWidth","developmentModeText","fontSize","lineHeight","textAlign","paddingTop","welcomeContainer","marginTop","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","bottom","left","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","radioProps","label","value","AddTaskScreen","submitDisabled","taskText","taskPriority","length","priority","response","added","placeholder","onChangeText","handleTextInput","priorityRow","labelText","radio_props","initial","formHorizontal","labelHorizontal","disabled","handleCreateTask","optionIconContainer","marginRight","option","borderWidth","hairlineWidth","borderBottomWidth","borderColor","lastOption","optionText","alignSelf","TabBarLabel","tabBarLabel","tabBarLabelActive","paddingBottom","BottomTab","createBottomTabNavigator","BottomTabNavigator","setOptions","headerTitle","getHeaderTitle","initialRouteName","options","tabBarIcon","routes","App","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Todo","Add","Detail","Settings","a","async","SplashScreen","preventAutoHide","Font","font","require","warn","hide","skipLoadingScreen","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","module","exports"],"mappings":"iPAEe,EAEG,OAFH,EAFG,UCKH,SAASA,EAAYC,GAClC,OACE,gBAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,KAAM,GACNC,MAAO,CAAEC,cAAe,GACxBC,MAAON,EAAMO,QAAUC,EAAyBA,I,wJCRvC,SAASC,EAAcT,GACpC,YAA2BU,IAAvBV,EAAMW,MAAMC,OACP,qCAGL,oCACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAMf,EAAMgB,WAAWC,YACrD,kBAACC,EAAA,EAAD,KAAOlB,EAAMW,MAAMC,OAAOO,KAAKC,MAC/B,kBAACF,EAAA,EAAD,KAAOlB,EAAMW,MAAMC,OAAOO,KAAKE,U,ueCFvC,IAAMC,EAAQC,cACC,SAASC,IACtB,OACE,gBAACF,EAAMG,UAAP,CAAiBC,cAAe,CAC9BC,aAAa,IAEb,gBAACL,EAAMM,OAAP,CAAc1B,KAAK,WAAW2B,UAAWC,IACzC,gBAACR,EAAMM,OAAP,CAAc1B,KAAK,SAAS2B,UAAWpB,K,IAIvCqB,E,uLACJ,WAAa9B,GAAQ,IAAD,sBAClB,cAAMA,IACD+B,mBAAgBrB,EACrB,EAAKsB,MAAQ,CAAEC,SAAU,IACzB,EAAKF,cAAgB/B,EAAMgB,WAAWkB,YAAY,SAChD,kBAAM,EAAKC,yBALK,E,qDAQD,IAAD,OAChBC,MAAM,iCAAkC,CACtCC,QAAS,CACPC,IAAK,YAGNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEZ,SAAUS,EAAKI,Y,4CAKnC,QAAgCpC,IAA5BqC,KAAK/C,MAAMW,MAAMC,OAAsB,CAAC,IAClCO,EAAS4B,KAAK/C,MAAMW,MAAMC,OAA1BO,KAERwB,QAAQC,IAAI,aACZD,QAAQC,IAAIzB,GACZ,IAAI6B,EAAcD,KAAKf,MAAMC,SAG7Be,EAAW,cAAOD,KAAKf,MAAMC,UAAlB,CAA4Bd,IACvC4B,KAAKF,SAAS,CAAEZ,SAAUe,O,6CAM5BD,KAAK/C,MAAMgB,WAAWiC,eAAe,QAASF,KAAKZ,uB,0CAInDY,KAAKG,mB,iCAGKC,GAAW,IAAD,OACpBf,MAAM,wCAAyC,CAC7CgB,OAAQ,OACRf,QAAS,CACPC,IAAK,SACL,eAAgB,mBAChBe,OAAQ,oBAEVX,KAAMY,KAAKC,UAAU,CAAEJ,SAAUA,MAEhCZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,GADAC,QAAQC,IAAIF,QACQhC,GAAhBgC,EAAKc,QAAsB,CAC7B,IAAMR,EAAc,EAAKhB,MAAMC,SAASwB,QAAO,SAACC,EAAGC,GAAJ,OAC5CA,IAAMR,KACT,EAAKN,SAAS,CAAEZ,SAAUe,U,mCAOpBG,EAAUnB,GAAQ,IAAD,OAC7BI,MAAM,0CAA2C,CAC/CgB,OAAQ,OACRf,QAAS,CACPC,IAAK,SACL,eAAgB,mBAChBe,OAAQ,oBAEVX,KAAMY,KAAKC,UACT,CACEJ,SAAUA,EACVS,OAAQ5B,MAGXO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,GADAC,QAAQC,IAAIF,QACQhC,GAAhBgC,EAAKmB,QAAsB,CAC7B,IAAMb,EAAW,IAAO,EAAKhB,MAAMC,UACnCe,EAAYG,GAAUW,UAAY9B,EAClC,EAAKa,SAAS,CAAEZ,SAAUe,U,+BAMvB,IAAD,OACR,OACE,gBAACe,EAAA,EAAD,CAAM3D,MAAO4D,EAAOC,WAClB,gBAAC,IAAD,CAAY7D,MAAO4D,EAAOC,UAAWC,sBAAuBF,EAAOG,kBACjE,gBAAC,IAAD,KAECpB,KAAKf,MAAMC,SAASmC,KAAI,SAACC,EAAMC,GAAP,OACvB,gBAACP,EAAA,EAAD,CAAMQ,IAAKD,EAAOlE,MAAO4D,EAAOQ,UAC9B,gBAAC,IAAD,CACEC,QAASJ,EAAKP,UACd/C,QAAS,kBAAM,EAAK2D,aAAaJ,GAAQD,EAAKP,cAEhD,gBAACa,EAAA,EAAD,CAAkB5D,QAAS,kBAAM,EAAKf,MAAMgB,WAAW4D,KAAK,SAAU,CAAEzD,KAAMkD,MAC5E,gBAACnD,EAAA,EAAD,KAAOmD,EAAKjD,KAAZ,IAAmBiD,EAAKP,UAAY,YAAc,KAGpD,gBAACC,EAAA,EAAD,CAAM3D,MAAO,CAAE+C,SAAU,WAAY0B,MAAO,IAC1C,gBAAChE,EAAA,EAAD,CAAQC,MAAM,IACZC,QAAS,kBAAM,EAAK+D,WAAWR,aAMzC,gBAACzD,EAAA,EAAD,CACEC,MAAM,WACNC,QAAS,kBAAM,EAAKf,MAAMgB,WAAW+D,SAAS,e,GAxH3BC,aA8H7BxD,EAAWyD,kBAAoB,CAC7BC,OAAQ,MAoCV,IAAMlB,EAASmB,IAAWC,OAAO,CAC/BZ,SAAU,CACRa,KAAM,EACNC,cAAe,MACfC,gBAAiB,OACjBC,WAAY,UAEdvB,UAAW,CACToB,KAAM,EACNI,SAAS,IACTF,gBAAiB,QAEnBG,oBAAqB,CACnBrF,aAAc,GACdC,MAAO,kBACPqF,SAAU,GACVC,WAAY,GACZC,UAAW,UAEb1B,iBAAkB,CAChB2B,WAAY,IAEdC,iBAAkB,CAChBP,WAAY,SACZQ,UAAW,GACX3F,aAAc,IAEhB4F,aAAc,CACZC,MAAO,IACPC,OAAQ,GACRC,WAAY,UACZJ,UAAW,EACXK,YAAa,IAEfC,oBAAqB,CACnBd,WAAY,SACZe,iBAAkB,IAEpBC,mBAAoB,CAClBC,eAAgB,GAElBC,kBAAmB,CACjBpG,MAAO,yBAETqG,uBAAwB,CACtBpB,gBAAiB,mBACjBqB,aAAc,EACdC,kBAAmB,GAErBC,eAAgB,CACdnB,SAAU,GACVrF,MAAO,sBACPsF,WAAY,GACZC,UAAW,UAEbkB,oB,iWAAoB,CAAD,CACjB5D,SAAU,WACV6D,OAAQ,EACRC,KAAM,EACNpC,MAAO,GACJqC,IAASC,OAAO,CACjBC,IAAK,CACHC,YAAa,QACbC,aAAc,CAAEpB,MAAO,EAAGC,QAAS,GACnCoB,cAAe,GACfC,aAAc,GAEhBC,QAAS,CACPC,UAAW,MAbE,CAgBjBlC,WAAY,SACZD,gBAAiB,UACjBoC,gBAAiB,KAEnBC,eAAgB,CACdjC,SAAU,GACVrF,MAAO,sBACPuF,UAAW,UAEbgC,mBAAoB,CAClB7B,UAAW,GAEb8B,cAAe,CACb9B,UAAW,GACXR,WAAY,UAEduC,SAAU,CACRJ,gBAAiB,IAEnBK,aAAc,CACZrC,SAAU,GACVrF,MAAO,a,qQC7QX,IAAM2H,EAAa,CACjB,CAAEC,MAAO,IAAKC,MAAO,GACrB,CAAED,MAAO,IAAKC,MAAO,GACrB,CAAED,MAAO,IAAKC,MAAO,IAGFC,E,uLACnB,WAAapI,GAAQ,IAAD,sBAClB,cAAMA,IACDgC,MAAQ,CACXqG,gBAAgB,EAChBC,SAAU,GACVC,aAAc,GALE,E,oDASHnH,GACXA,EAAKoH,OAAS,EAChBzF,KAAKF,SACH,CACEwF,gBAAgB,EAChBC,SAAUlH,KAGd2B,KAAKF,SAAS,CAAEwF,gBAAgB,IAChC1F,QAAQC,IAAIxB,M,yCAIK,IAAD,OAClBuB,QAAQC,IAAI,UACZD,QAAQC,IAAIG,KAAKf,MAAMsG,SAAUvF,KAAKf,MAAMuG,cAC5CnG,MAAM,qCAAsC,CAC1CgB,OAAQ,OACRf,QAAS,CACPC,IAAK,SACL,eAAgB,mBAChBe,OAAQ,oBAEVX,KAAMY,KAAKC,UACT,CACEnC,KAAM2B,KAAKf,MAAMsG,SACjBG,SAAU1F,KAAKf,MAAMuG,iBAGxBhG,MAAK,SAAAmG,GAAQ,OAAIA,EAASjG,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,QACOhC,IAAfgC,EAAKiG,OACPhG,QAAQC,IAAI,4BACZ,EAAK5C,MAAMgB,WAAW+D,SAAS,OAC7B,CACE5D,KACA,CACEC,KAAM,EAAKY,MAAMsG,SACjBG,SAAU,EAAKzG,MAAMuG,iBAI3B5F,QAAQC,IAAI,0B,8EAUT,IAAD,OACR,OACE,gBAAC,IAAD,CAAYxC,MAAO4D,EAAOC,UAAWC,sBAAuBF,EAAOG,kBACjE,gBAAC,IAAD,CAAOyE,YAAY,0CACjBC,aAAc,SAAAzH,GAAI,OAAI,EAAK0H,gBAAgB1H,MAC7C,gBAAC2C,EAAA,EAAD,CAAM3D,MAAO4D,EAAO+E,aAClB,gBAAC7H,EAAA,EAAD,CAAMd,MAAO4D,EAAOgF,WAApB,aACA,gBAAC,IAAD,CACEC,YAAahB,EACbiB,QAAS,EACTC,gBAAgB,EAChBC,iBAAiB,EACjBrI,QAAS,SAACoH,GAAY,EAAKtF,SAAS,CAAE0F,aAAcJ,QAGxD,gBAAC,IAAD,CAAQrH,MAAM,cACZuI,SAAUtG,KAAKf,MAAMqG,eACrBtH,QAAS,kBAAM,EAAKuI,2B,GAhFatE,aAsFrChB,EAASmB,IAAWC,OAAO,CAC/B4D,UAAW,CACTrD,SAAU,IAEZoD,YAAa,CACX1D,KAAM,EACNG,WAAY,SACZM,WAAY,GACZR,cAAe,MACfC,gBAAiB,WAEnBtB,UAAW,CACToB,KAAM,EACNE,gBAAiB,WAEnBpB,iBAAkB,CAChB2B,WAAY,IAEdyD,oBAAqB,CACnBC,YAAa,IAEfC,OAAQ,CACNlE,gBAAiB,UACjBsB,kBAAmB,GACnBc,gBAAiB,GACjB+B,YAAavE,IAAWwE,cACxBC,kBAAmB,EACnBC,YAAa,WAEfC,WAAY,CACVF,kBAAmBzE,IAAWwE,eAEhCI,WAAY,CACVpE,SAAU,GACVqE,UAAW,aACXhE,UAAW,KCjIA,SAASiE,GAAajK,GACnC,OACE,gBAACkB,EAAA,EAAD,CACEf,KAAM,GACNC,MAAO,CAAC4D,GAAOkG,YACblK,EAAMO,QAAUyD,GAAOmG,kBAAoB,KAE7CnK,EAAMc,OAIZ,IAAMkD,GAASmB,IAAWC,OAAO,CAC/B8E,YAAa,CACXE,cAAe,EACfzE,SAAU,GACVE,UAAW,UAEbsE,kBAAmB,CACjB7J,MAAOE,KCdL6J,GAAYC,cAGH,SAASC,GAAT,GAAoD,IAAtBvJ,EAAqB,EAArBA,WAAYL,EAAS,EAATA,MAMvD,OAFAK,EAAWwJ,WAAW,CAAEC,YAAaC,GAAe/J,KAGlD,gBAAC0J,GAAU5I,UAAX,CAAqBkJ,iBATE,QAUrB,gBAACN,GAAUzI,OAAX,CACE1B,KAAK,OACL2B,UAAWL,EACXoJ,QAAS,CACP9J,MAAO,YACP+J,WAAY,gBAAGtK,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,cAChEgK,YAAa,gBAAG3J,EAAH,EAAGA,QAAH,OAAiB,gBAAC0J,GAAD,CAAanJ,MAAO,YAAaP,QAASA,QAG5E,gBAAC8J,GAAUzI,OAAX,CACE1B,KAAK,MACL2B,UAAWuG,EACXwC,QAAS,CACP9J,MAAO,WACP+J,WAAY,gBAAGtK,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,aAChEgK,YAAa,gBAAG3J,EAAH,EAAGA,QAAH,OAAiB,gBAAC0J,GAAD,CAAanJ,MAAO,WAAYP,QAASA,SAOjF,SAASmK,GAAe/J,GAAQ,IAAD,MAG7B,OAFe,kBAAGA,EAAMqB,QAAT,SAAG,EAAa8I,OAAOnK,EAAMqB,MAAMsC,aAAnC,EAAG,EAAwCpE,MAA3C,EAjCU,QAoCvB,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,qBACT,IAAK,SACH,MAAO,iB,goBCvCb,IAAMoB,GAAQC,cAEC,SAASwJ,GAAK/K,GAAQ,IAAD,EACcgF,YAAe,GAD7B,WAC3BgG,EAD2B,KACRC,EADQ,OAE0BjG,aAF1B,WAE3BkG,EAF2B,KAEHC,EAFG,KAG5BC,EAAepG,WACbqG,ECdK,SAAUD,GACvB,OAAOE,aAAWF,EAAc,CAC9BG,SAAU,CAACC,KAAQC,QAAQ,MAC3BC,OAAQ,CACNC,KAAM,CACJC,KAAM,OACNC,QAAS,CACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,SAAU,gBDIUX,CAAWF,GAA/BC,gBA4BR,OAzBArG,aAAgB,WACd,EAAAkH,EAAAC,OAAA,gEAEIC,IAAaC,kBAFjB,KAKIlB,EALJ,WAAAe,EAAA,MAKoCb,KALpC,oDAAAa,EAAA,MAQUI,IAAA,MACDrM,IAASsM,KADR,CAEJ,aAAcC,EAAQ,SAV5B,yDAcI7J,QAAQ8J,KAAR,MAdJ,yBAgBIxB,GAAmB,GACnBmB,IAAaM,OAjBjB,sFAsBC,IAEE1B,GAAsBhL,EAAM2M,kBAI7B,gBAAC5I,EAAA,EAAD,CAAM3D,MAAO4D,GAAOC,WACD,QAAhBiD,IAAS0F,IAAgB,gBAACC,EAAA,EAAD,CAAWC,SAAS,YAC9C,gBAACC,EAAA,EAAD,CAAqBC,IAAK5B,EAAc6B,aAAc/B,GACpD,gBAAC,GAAMzJ,UAAP,KACE,gBAAC,GAAMG,OAAP,CAAc1B,KAAK,OAAO2B,UAAW0I,QAPtC,KAeX,IAAMvG,GAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNE,gBAAiB,W,+DE9DjB,kBAAmB2H,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,uCAAwC,CAAEC,MAAO,mBAC1DhL,MAAK,SAASiL,OAGdC,OAAM,SAASC,GACd/K,QAAQ6K,KAAK,oCAAqCE,U,oBCV1DC,EAAOC,QAAU,IAA0B,kC","file":"static/js/app.855389e7.chunk.js","sourcesContent":["const tintColor = '#02F5dc'\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff'\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as React from 'react'\n\nimport Colors from '../constants/Colors'\n\nexport default function TabBarIcon (props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  )\n}\n","import React from 'react'\r\nimport { Text, Button } from 'react-native'\r\n\r\nexport default function DetailScreen (props) {\r\n  if (props.route.params === undefined) {\r\n    return <></>\r\n  } else {\r\n    return (\r\n      <>\r\n        <Button title=\"Back\" onPress={() => props.navigation.goBack()}></Button>\r\n        <Text>{props.route.params.task.text}</Text>\r\n        <Text>{props.route.params.task.details}</Text>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import * as WebBrowser from 'expo-web-browser'\nimport * as React from 'react'\nimport { Button, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport { CheckBox } from 'react-native-elements'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport DetailScreen from './DetailScreen'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { Card } from 'react-native-material-ui';\n\nconst Stack = createStackNavigator()\nexport default function TodoScreen () {\n  return (\n    <Stack.Navigator screenOptions={{\n      headerShown: false\n    }}>\n      <Stack.Screen name=\"TodoList\" component={TodoListScreen} />\n      <Stack.Screen name=\"Detail\" component={DetailScreen} />\n    </Stack.Navigator>\n  )\n}\nclass TodoListScreen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.focusListener = undefined\n    this.state = { todoList: [] }\n    this.focusListener = props.navigation.addListener('focus',\n      () => this.componentGainsFocus())\n  }\n\n  updateTaskList () {\n    fetch('https://plato.mrl.ai:8081/todo', {\n      headers: {\n        API: 'murray'\n      }\n    })\n      .then(res => res.json())\n      .then(body => {\n        console.log(body)\n        this.setState({ todoList: body.todo })\n      })\n  }\n\n  componentGainsFocus () {\n    if (this.props.route.params !== undefined) {\n      const { task } = this.props.route.params\n\n      console.log('Has focus')\n      console.log(task)\n      let currentList = this.state.todoList\n      // Option 1: Push\n      // currentList.push(task)\n      currentList = [...this.state.todoList, task]\n      this.setState({ todoList: currentList })\n      // this.updateTaskList()\n    }\n  }\n\n  componentWillUnmount () {\n    this.props.navigation.removeListener('focus', this.componentGainsFocus)\n  }\n\n  componentDidMount () {\n    this.updateTaskList()\n  }\n\n  removeTask (position) {\n    fetch('https://plato.mrl.ai:8081/todo/remove', {\n      method: 'POST',\n      headers: {\n        API: 'murray',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ position: position })\n    })\n      .then(res => res.json())\n      .then(body => {\n        console.log(body)\n        if (body.removed != undefined) {\n          const currentList = this.state.todoList.filter((v, i) =>\n            (i !== position))\n          this.setState({ todoList: currentList })\n        }\n        // this.setState({todoList:body.todo})\n      })\n  }\n\n  // Implement  completing the task on the server\n  completeTask (position, state) {\n    fetch('https://plato.mrl.ai:8081/todo/setState', {\n      method: 'POST',\n      headers: {\n        API: 'murray',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(\n        {\n          position: position,\n          status: state\n        })\n    })\n      .then(res => res.json())\n      .then(body => {\n        console.log(body)\n        if (body.updated != undefined) {\n          const currentList = [...this.state.todoList]\n          currentList[position].completed = state\n          this.setState({ todoList: currentList })\n        }\n        // this.setState({todoList:body.todo})\n      })\n  }\n\n  render () {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          <Card>\n\n          {this.state.todoList.map((item, index) =>\n            <View key={index} style={styles.todoView}>\n              <CheckBox\n                checked={item.completed}\n                onPress={() => this.completeTask(index, !item.completed)}\n                />\n              <TouchableOpacity onPress={() => this.props.navigation.push('Detail', { task: item })} >\n                <Text>{item.text} {item.completed ? 'COMPLETED' : ''}\n                </Text>\n              </TouchableOpacity>\n              <View style={{ position: 'absolute', right: 0 }}>\n                <Button title=\"X\"\n                  onPress={() => this.removeTask(index)}></Button>\n              </View>\n            </View>\n          )}\n        </Card>\n        </ScrollView>\n        <Button\n          title=\"Add Task\"\n          onPress={() => this.props.navigation.navigate('Add')}/>\n      </View>\n    )\n  }\n}\n\nTodoScreen.navigationOptions = {\n  header: null\n}\n\nfunction DevelopmentModeNotice () {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    )\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    )\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    )\n  }\n}\n\nfunction handleLearnMorePress () {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/')\n}\n\nfunction handleHelpPress () {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  )\n}\n\nconst styles = StyleSheet.create({\n  todoView: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    maxWidth:800,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3\n      },\n      android: {\n        elevation: 20\n      }\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n})\n","import * as React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { Input, Button } from 'react-native-elements'\nimport RadioForm, {} from 'react-native-simple-radio-button'\n\nconst radioProps = [\n  { label: '1', value: 0 },\n  { label: '2', value: 1 },\n  { label: '3', value: 3 }\n]\n\nexport default class AddTaskScreen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      submitDisabled: true,\n      taskText: '',\n      taskPriority: 0\n    }\n  }\n\n  handleTextInput (text) {\n    if (text.length > 0) {\n      this.setState(\n        {\n          submitDisabled: false,\n          taskText: text\n        })\n    } else {\n      this.setState({ submitDisabled: true })\n      console.log(text)\n    }\n  }\n\n  handleCreateTask () {\n    console.log('Added!')\n    console.log(this.state.taskText, this.state.taskPriority)\n    fetch('https://plato.mrl.ai:8081/todo/add', {\n      method: 'POST',\n      headers: {\n        API: 'murray',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(\n        {\n          text: this.state.taskText,\n          priority: this.state.taskPriority\n        })\n    })\n      .then(response => response.json())\n      .then(body => {\n        console.log(body)\n        if (body.added !== undefined) {\n          console.log('Successfully added task!')\n          this.props.navigation.navigate('Todo',\n            {\n              task:\n              {\n                text: this.state.taskText,\n                priority: this.state.taskPriority\n              }\n            })\n        } else {\n          console.log('Error adding task')\n        }\n        // this.setState({todoList:body.todo})\n      })\n  }\n\n  handlePriorityInput () {\n\n  }\n\n  render () {\n    return (\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <Input placeholder=\"e.g. Complete Final Project for DIG4639\"\n          onChangeText={text => this.handleTextInput(text)} />\n        <View style={styles.priorityRow}>\n          <Text style={styles.labelText}>Priority:</Text>\n          <RadioForm\n            radio_props={radioProps}\n            initial={0}\n            formHorizontal={true}\n            labelHorizontal={false}\n            onPress={(value) => { this.setState({ taskPriority: value }) }}\n          />\n        </View>\n        <Button title=\"Create Task\"\n          disabled={this.state.submitDisabled}\n          onPress={() => this.handleCreateTask()}/>\n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  labelText: {\n    fontSize: 25\n  },\n  priorityRow: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop: 25,\n    flexDirection: 'row',\n    backgroundColor: '#fafafa'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n})\n","import * as React from 'react'\nimport { Text, StyleSheet } from 'react-native'\nimport Colors from '../constants/Colors'\n\nexport default function TabBarLabel (props) {\n  return (\n    <Text\n      size={30}\n      style={[styles.tabBarLabel,\n        props.focused ? styles.tabBarLabelActive : {}\n      ]}\n    >{props.title}</Text>\n  )\n}\n\nconst styles = StyleSheet.create({\n  tabBarLabel: {\n    paddingBottom: 6,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  tabBarLabelActive: {\n    color: Colors.tabIconSelected\n  }\n})\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport TodoScreen from '../screens/TodoScreen';\nimport AddTaskScreen from '../screens/AddTaskScreen';\nimport DetailScreen from '../screens/DetailScreen';\nimport TabBarLabel from '../components/TabBarLabel';\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Todo';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Todo\"\n        component={TodoScreen}\n        options={{\n          title: 'Todo List',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"ios-list\" />,\n          tabBarLabel: ({ focused }) => <TabBarLabel title={'Todo List'} focused={focused} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Add\"\n        component={AddTaskScreen}\n        options={{\n          title: 'Add Task',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"ios-add\" />,\n          tabBarLabel: ({ focused }) => <TabBarLabel title={'Add Task'} focused={focused} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Todo':\n      return 'Todo List:';\n    case 'Add':\n      return 'Create a new Task:';\n    case 'Detail':\n      return 'Task details:';\n  }\n}\n","import * as React from 'react'\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native'\nimport { SplashScreen } from 'expo'\nimport * as Font from 'expo-font'\nimport { Ionicons } from '@expo/vector-icons'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator'\nimport useLinking from './navigation/useLinking'\n\nconst Stack = createStackNavigator()\n\nexport default function App (props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false)\n  const [initialNavigationState, setInitialNavigationState] = React.useState()\n  const containerRef = React.useRef()\n  const { getInitialState } = useLinking(containerRef)\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync () {\n      try {\n        SplashScreen.preventAutoHide()\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState())\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf')\n        })\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e)\n      } finally {\n        setLoadingComplete(true)\n        SplashScreen.hide()\n      }\n    }\n\n    loadResourcesAndDataAsync()\n  }, [])\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n})\n","import { useLinking } from '@react-navigation/native'\nimport { Linking } from 'expo'\n\nexport default function (containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'root',\n        screens: {\n          Todo: 'todo',\n          Add: 'add',\n          Detail: 'detail',\n          Settings: 'settings'\n        }\n      }\n    }\n  })\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/contactCards/expo-service-worker.js', { scope: '/contactCards/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}